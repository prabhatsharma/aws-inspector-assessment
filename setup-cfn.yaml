AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  TOPICARN:
    Type: String
    Default: '-'
    Description: 'SNS Topic ARN that will be sent notification on assessment runs'
Resources:
  iamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: ec2-inspector-assesor
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: Stmt53261354139
            Action:
              - inspector:CreateAssessmentTarget
              - inspector:CreateAssessmentTemplate
              - inspector:CreateResourceGroup
              - inspector:ListRulesPackages
              - inspector:StartAssessmentRun
              - inspector:SubscribeToEvent
            Effect: Allow
            Resource: "*"
          - Sid: Stmt345673445436
            Action:
              - ec2:CreateTags
              - ec2:DeleteTags
            Effect: Allow
            Resource: "*"
          - Sid: Stmt1528473909949
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties: 
      Code:
        S3Bucket: prabhat00-public
        S3Key: main.zip
      FunctionName: ec2-inspector-assessor
      Handler: main
      Runtime: go1.x
      MemorySize: 128
      Environment:
        Variables: 
          TOPICARN: 
            Ref: TOPICARN
      Timeout: 300
      Role:
        Fn::GetAtt:
        - iamRole
        - Arn
  cloudwatchEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: ec2inspector
      State: ENABLED
      Targets: 
      - Arn: 
          Fn::GetAtt:
          - lambdaFunction
          - Arn
        Id: 123
      Description: 'Rule that would fire the lambda function when any ec2 reaches running state'
      EventPattern: '{
                      "source": [
                        "aws.ec2"
                      ],
                      "detail-type": [
                        "EC2 Instance State-change Notification"
                      ],
                      "detail": {
                        "state": [
                          "running"
                        ]
                      }
                    }'
  lambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: lambdaFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - cloudwatchEvent
        - Arn
  SNSPolicy:    
    Type: "AWS::SNS::TopicPolicy"
    Properties: 
      PolicyDocument: 
        Id: Policy1528730613045
        Version: '2012-10-17'
        Statement:
        - Sid: Stmt1528730610837
          Action:
          - sns:Publish
          Effect: Allow
          Resource:
            Ref: TOPICARN
          Principal:
            AWS: '758058086616' # inspector account
      Topics:
      - Ref: TOPICARN